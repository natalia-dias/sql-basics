create table person ('person_id' VARCHAR(9) PRIMARY KEY, "full_name" TEXT, "address" TEXT, "building_number" TEXT, "phone_number" TEXT);
.mode csv
.import --skip 1 person.csv person
.mode column
/*select person_id, full_name from person
order by person_id asc
limit 5;*/

create table teacher ("person_id" VARCHAR(9) PRIMARY KEY,"class_code" TEXT);
.mode csv
.import --skip 1 teacher.csv teacher
.mode column
/* SELECT person_id, full_name FROM person WHERE person_id NOT IN (SELECT person_id FROM teacher) ORDER BY full_name LIMIT 5;
select COUNT(person_id) from person WHERE person_id NOT IN (SELECT person_id FROM teacher);*/

create table student ("person_id" VARCHAR(9) PRIMARY KEY, "grade_code" TEXT);
INSERT INTO student ('person_id') 
SELECT person_id FROM person WHERE person_id NOT IN (SELECT person_id FROM teacher);

/* SELECT * FROM student
ORDER BY person_id
LIMIT 5;*/

CREATE TABLE score1 ("person_id" VARCHAR(9), "score" INTEGER);
CREATE TABLE score2 ("person_id" VARCHAR(9), "score" INTEGER);
CREATE TABLE score3 ("person_id" VARCHAR(9), "score" INTEGER);

.mode csv

.import --skip 1 score1.csv score1
.import --skip 1 score2.csv score2
.import --skip 1 score3.csv score3

.mode column

/*SELECT * FROM score1
UNION ALL SELECT * FROM score2
UNION ALL SELECT * FROM score3;*/

CREATE TABLE score ("person_id" VARCHAR(9), "score" INTEGER);

INSERT INTO score SELECT * FROM score1
UNION ALL SELECT * FROM score2
UNION ALL SELECT * FROM score3;

DROP TABLE score1;
DROP TABLE score2;
DROP TABLE score3;

/*SELECT * FROM score
ORDER BY person_id
LIMIT 5;

.print

SELECT person_id, COUNT(score) AS "count(score)"
FROM score
GROUP BY person_id
HAVING COUNT(score) = 3
ORDER BY person_id
LIMIT 5;*/

UPDATE student
SET grade_code = 'GD-09'
WHERE person_id NOT IN
(SELECT person_id
FROM score)
;

UPDATE student
SET grade_code = 'GD-10'
WHERE person_id IN
(SELECT person_id FROM 
(SELECT person_id, COUNT(score) OVER (PARTITION BY person_id) AS gd_code
FROM score)
WHERE gd_code = 1);

UPDATE student
SET grade_code = 'GD-11'
WHERE person_id IN
(SELECT person_id FROM 
(SELECT person_id, COUNT(score) OVER (PARTITION BY person_id) AS gd_code
FROM score)
WHERE gd_code = 2);

UPDATE student
SET grade_code = 'GD-12'
WHERE person_id IN
(SELECT person_id FROM 
(SELECT person_id, COUNT(score) OVER (PARTITION BY person_id) AS gd_code
FROM score)
WHERE gd_code = 3);

/*SELECT *
FROM student
ORDER BY person_id
LIMIT 5;

+Select all records from the score table. 
+Calculate the average score as avg_score. 
+Round to 2 decimal places. 
+Display it if the grade_code is GD-12 in the student table. 
+Group by person_id and order the results by avg_score in descending order;*/

SELECT person_id, ROUND(AVG(score), 2) AS avg_score
FROM score
WHERE person_id IN
(SELECT person_id
FROM student
WHERE grade_code = 'GD-12')
GROUP BY person_id
ORDER BY avg_score DESC;
